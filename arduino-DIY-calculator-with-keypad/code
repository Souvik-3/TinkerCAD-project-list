#include <Keypad.h>
#include <Wire.h>
#include <LiquidCrystal.h>

LiquidCrystal lcd(13, 12, 11, 10, 9, 8);

long first = 0;
long second = 0;
double total = 0;

char customKey;
const byte ROWS = 4;
const byte COLS = 4;

char keys[ROWS][COLS] = {
  {'1', '2', '3', '+'},
  {'4', '5', '6', '-'},
  {'7', '8', '9', '*'},
  {'C', '0', '=', '/'}
};

byte rowPins[ROWS] = {7, 6, 5, 4};
byte colPins[COLS] = {3, 2, 1, 0};

Keypad customKeypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

void setup() {
  lcd.begin(16, 2);  // Fixed initialization
  lcd.setCursor(0, 0);
  lcd.print("Calculator");
  lcd.setCursor(0, 1);
  lcd.print("Enter numbers: ");
  delay(2000);
  lcd.clear();
}

void loop() {
  customKey = customKeypad.getKey();
  
  if (customKey) {
    switch (customKey) {  // Removed semicolon
      case '0': case '1': case '2': case '3': case '4': 
      case '5': case '6': case '7': case '8': case '9':  // Fixed digit handling
        lcd.setCursor(0, 0);
        first = first * 10 + (customKey - '0');
        lcd.print(first);
        break;
        
      case '+':
        handleOperation('+');
        break;
        
      case '-':
        handleOperation('-');
        break;
        
      case '*':
        handleOperation('*');
        break;
        
      case '/':
        handleOperation('/');
        break;
        
      case 'C':  // Clear function
        first = 0;
        second = 0;
        total = 0;
        lcd.clear();
        break;
    }
  }
}

void handleOperation(char op) {
  first = (total != 0) ? total : first;
  lcd.print(op);
  second = SecondNumber();
  
  switch (op) {
    case '+': 
      total = first + second;
      break;
    case '-': 
      total = first - second;
      break;
    case '*': 
      total = first * second;
      break;
    case '/': 
      if (second == 0) {
        lcd.setCursor(0, 1);
        lcd.print("Invalid");
        delay(2000);
        lcd.clear();
        return;
      } else {
        total = (float)first / second;
      }
      break;
  }
  
  lcd.setCursor(0, 1);  // Fixed display row
  lcd.print("=");
  lcd.print(total);
  first = 0;
  second = 0;
}

long SecondNumber() {
  second = 0;  // Reset variable
  while (true) {
    customKey = customKeypad.getKey();
    
    if (customKey) {
      if (customKey >= '0' && customKey <= '9') {  // Fixed digit range
        second = second * 10 + (customKey - '0');
        lcd.setCursor(7, 0);
        lcd.print(second);
      }
      
      if (customKey == '=') break;
      
      if (customKey == 'C') {  // Handle clear during entry
        second = 0;
        lcd.clear();
        return 0;
      }
    }
  }
  return second;
}
